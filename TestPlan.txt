Roman Number Calculator (Addition or Subtraction)

Project: By Vivek Shah
=======================================================================
Compiler: GCC
Framework: Check (FOR TDD)
=======================================================================
Roman Numbers:
I = 1 || V = 5 || X = 10 || L = 50 || C = 100 || D = 500 || M = 1000
=======================================================================
In this program as we are dealing Roman number i/p would be string, and that string would be capital letters only
=======================================================================
>Test-1
Check the Input Roman Number provided by User Should only Contain Roman Numbers i.e I/V/X/L/C/D/M.

Will start with checking one single digit number. i.e if Input is 'I' Function should return 1 otherwise 0.

i.e if Input is 'I' test PASS, if 'i' test fail.

after test for 'I;' move to another Input 'V', and we will move from testing of one Input to another in folllowing manor.

>>Test-1-1: if Input is 'V' test PASS, if 'v' test fail.
>>Test-1-2: if Input is 'X' test PASS, if 'x' test fail.
>>Test-1-3: if Input is 'L' test PASS, if 'l' test fail.
>>Test-1-4: if Input is 'C' test PASS, if 'c' test fail.
>>Test-1-5: if Input is 'D' test PASS, if 'd' test fail.
>>Test-1-6: if Input is 'M' test PASS, if 'm' test fail.
=======================================================================
>Test-2
Will move from checking one single digit number to number with multiple characters.

i.e if Input is 'MVXLI' test PASS, if input is 'MvXLI' or any character of input string is in lowwer case or not from Roman character set, the test should fail.
=======================================================================
>Test-3
Convert Roman number to Decimal (Its known as Hindi-Arebic Nuber system i.e 1,2,3 etc)
We will start with simple conversion,
i.e if input 'I' conversion should be 1
i.e If input 'I' ->> Conversion function output 1 ->> Test pass

after test for 'I;' move to another Input 'V', and we will move from testing of one Input to another in folllowing manor.

>>Test-3-1: if Input is 'V' Output is '5' test PASS, else test fail.
>>Test-3-2: if Input is 'X' Output is '10' test PASS, else test fail.
>>Test-3-3: if Input is 'L' Output is '50' test PASS, else test fail.
>>Test-3-4: if Input is 'C' Output is '100' test PASS, else test fail.
>>Test-3-5: if Input is 'D' Output is '500' test PASS, else test fail.
>>Test-3-6: if Input is 'M' Output is '1000' test PASS, else test fail.
=======================================================================
>Test-4
Will move from converting one single digit number to number with string.
i.e Input 'MDCLXVI' if Output 1666 ->> Test pass
=======================================================================
>Test-5
In Roman number system if lesser numeral is placed before higher value number then its conversion to decimal would be >> Big Number - small number <<.

i.e 'IV' = 4 (V - I) not 6 (I + V)
So if Input is 'IV' and output is 4 test pass

another example would be 'VL' = 45, 'XC' = 90, 'CM' = 900 etc..
=======================================================================
Now we will go ahead to test Bigger number 
i.e if Input is 'MXLVI'Output is 1046 test is passed

what we do here??
Ans:
here 'MLXLVI' = M(1000) + L(50) + XL(L-X=50-10=40) + V(5) + I(1) = 1096
=======================================================================
>Test-6
Perform Addition operation(Input 1 + Input 2)
If Input 1 = 'MCDLV' = 1455
&  Input 2 = 'MXLVI' = 1046

output should be 2501 if its 2501 test pass.
=======================================================================
>Test-7
Perform Subtraction operation(Input 1 - Input 2)
If Input 1 = 'MCDLV' = 1455
&  Input 2 = 'MXLVI' = 1046

output should be 409 if its 409 test pass.
=======================================================================
>Test-8
Roman Numerals does not have concept of negative numbers so if Input 1 is greater then Input 2 still output should be positive.
i.e. Perform Subtraction operation 
If Input 1 = 'MXLVI' = 1046
&  Input 2 = 'MCDLV' = 1455
Here Input 1 < Input 2 so it should do (Input 2 - Input 1) not (Input 1 - Input 2)
output should be 409 not -409
=======================================================================
And Now the Main Part comes as we are creating Roman Number calculator we dont want final output as Decimal we need it in Roman Number. So now we will test for conversion from Decimal to Roman Numbers.
======================================================================= 
>Test-9
We will start with simple single digit number conversion.
If Input to Conversion function is 1 Output should be 'I'
Test Cases:
    No     ||I/P  ||  O/P   |
-----------||-----||--------|
 Test-9-1  || 2   ||  'II'   
 Test-9-2  || 3   ||  'III'
 Test-9-3  || 4   ||  'IV'
 Test-9-4  || 5   ||  'V'
 Test-9-5  || 6   ||  'VI'
 Test-9-6  || 7   ||  'VII'   
 Test-9-7  || 8   ||  'VIII'
 Test-9-8  || 9   ||  'IX'
======================================================================= 
>Test-10
We will start with Double digit number conversion.
If Input to Conversion function is 10 Output should be 'X'
Test Cases:
    No     || I/P  ||  O/P   |
-----------||------||--------|
 Test-10-1  || 20   ||  'XX'   
 Test-10-2  || 30   ||  'XXX'
 Test-10-3  || 40   ||  'XL'
 Test-10-4  || 50   ||  'L'
 Test-10-5  || 60   ||  'LX'   
 Test-10-6  || 70   ||  'LXX'
 Test-10-7  || 80   ||  'LXXX'
 Test-10-8  || 90   ||  'XC'
======================================================================= 
>Test-11
If Input to Conversion function is 11 output should be XI
If Input to Conversion function is 19 output should be XIX
=======================================================================
>Test-12
We will start with Tripple digit number conversion.
If Input to Conversion function is 100 Output should be 'C'
Test Cases:
    No     ||  I/P  ||  O/P   |
-----------||-------||--------|
 Test-12-1  || 200   ||  'CC'   
 Test-12-2  || 300   ||  'CCC'
 Test-12-3  || 400   ||  'CD'
 Test-12-4  || 500   ||  'D'
 Test-12-5  || 600   ||  'DC'   
 Test-12-6  || 700   ||  'DCC'
 Test-12-7  || 800   ||  'DCCC'
 Test-12-8  || 900   ||  'CM'
======================================================================= 
>Test-13
If Input to Conversion function is 111 output should be CXI
If Input to Conversion function is 899 output should be DCCCXCIX
=======================================================================
>Test-14
If Input to Conversion function is 1000 output should be M
Here in case of thousand 
Test Cases:
     No     ||  I/P   ||  O/P   |
------------||--------||--------|
 Test-14-1  || 2000   ||  'MM'   
 Test-14-2  || 3000   ||  'MMM'
 Test-14-3  || 9000   ||  'MMMMMMMMM'
 
